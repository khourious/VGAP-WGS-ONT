#!/bin/bash

while getopts ":b:g:r:s:t:" OPT; do
    case $OPT in
        b ) BASECALL="$OPTARG";;
        g ) GPUMEM="$OPTARG";;
        r ) RAWPATH="$OPTARG";;
        s ) SAMPLESHEET="$OPTARG";;
        t ) THREADS="$OPTARG";;
    esac
done
shift $((OPTIND -1))

if [[ -z "$BASECALL" ]] || [[ -z "$GPUMEM" ]] || [[ -z "$RAWPATH" ]] || [[ -z "$SAMPLESHEET" ]] || [[ -z "$THREADS" ]]; then
    echo "Assembly pipeline for WGS using ONT

Usage: $(basename $0) [-b BASECALL] [-g GPUMEM] [-r RAWPATH] [-s SAMPLESHEET] [-t THREADS]

-b  The basecalling accuracy model to aply: 'fast' or 'hac' or 'sup'.
-g  VRAM to determine the number of runners per GPU device (i.e.: RTX 2060='6'; RTX 2080='8').
-r  Path containing the fast5 sequencing data.
-s  Path containing the sample sheet in .csv.
-t  Number of CPU worker threads (i.e.: i7-9750H='12')."
    exit 1
fi

VGAP=$(find $HOME -type d -name "vgapWGS-ONT")

LIBRARY_NAME=$(basename "$SAMPLESHEET" | awk -F. '{print $1}')

bg() {

    start=$(date +%s.%N)

    if [[ "$BASECALL" = "fast" ]]; then
        "$VGAP"/SCRIPTS/assembly_fast.sh "$SAMPLESHEET" "$RAWPATH" "$THREADS" "$GPUMEM"
    fi

    if [[ "$BASECALL" = "hac" ]]; then
        "$VGAP"/SCRIPTS/assembly_hac.sh "$SAMPLESHEET" "$RAWPATH" "$THREADS" "$GPUMEM"
    fi

    end=$(date +%s.%N)

    runtime=$(python -c "print(${end} - ${start})")

    echo "" && echo "Done. The runtime was $runtime seconds."

}

bg $1 $2 $3 $4 &>>"$VGAP"/LIBRARIES/"$LIBRARY_NAME"_log.txt &
