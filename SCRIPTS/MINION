#!/bin/bash

CUDACORES="$4" # NVIDIAGeForceRTX2060=32; NVIDIAGeForceRTX2080=64

NUMCALLERS="46" # NVIDIAGeForceRTX2060=60; NVIDIAGeForceRTX2080=46

while getopts ":r:s:dt:g:c:h" opt; do
	case $opt in
		r ) RAWPATH="$OPTARG";;
		s ) SAMPLESHEET="$OPTARG";;
		d ) PLOTDEPTH=yes;;
		t )  THREADS="$OPTARG";;
		g )  CUDACORES="$OPTARG";;
		c )  NUMCALLERS="$OPTARG";;
		h ) HELP=yes;;
	esac
done
shift $((OPTIND -1))

if [[ -z "$RAWPATH" ]] || [[ -z "$SAMPLESHEET" ]] || [[ -z "$THREADS" ]] || [[ -z "$CUDACORES" ]] || [[ -z "$NUMCALLERS" ]]; then
	echo "Assembly pipeline for WGS using MinION

Usage: $(basename $0) [-r RAWPATH] [-s SAMPLESHEET] [-d] [-t THREADS] [-g CUDACORES] [-c NUMCALLERS] [-h]

Options:
-r  The PATH to the directory containing the raw sequencing data (fast5 files).
-s  The PATH to the sample sheet (.csv) file.
-d  Generates depth plots in sigle PDF file from multiple BAM files to briefly check coverages.
-t  Number of tasks to process concurrently.
-g  Number of GPU cuda cores [for guppy_basecaller].
-c  Number of parallel basecallers to FAST5 file [for guppy_basecaller].
-h  Display this help message."
	exit 1
fi

assembly_minion.sh $SAMPLESHEET $RAWPATH $THREADS $CUDACORES $NUMCALLERS >> $HOME/WGS/LIBRARIES/$(basename $RAWPATH)_log.txt

if [[ -n "$PLOTDEPTH" ]]; then
	source activate depth
	plot_depth.py --bams $HOME/WGS/LIBRARIES/$(basename $RAWPATH)/ANALYSIS/*.trimmed.sorted.bam -o $HOME/WGS/LIBRARIES/$(basename $RAWPATH)/CONSENSUS/$(basename $RAWPATH).depth.pdf -r $HOME/WGS/LIBRARIES/$(basename $RAWPATH)/ANALYSIS/*.reference.fasta # https://github.com/ItokawaK/Alt_nCov2019_primers
fi

rm -rf $HOME/WGS/LIBRARIES/$(basename $RAWPATH)/ANALYSIS/*.reference.fasta*

rm -rf $HOME/WGS/LIBRARIES/$(basename $RAWPATH)/ANALYSIS/*.score.bed

tar -czf $HOME/WGS/LIBRARIES/$(basename $RAWPATH).tar.gz -P $HOME/WGS/LIBRARIES/$(basename $RAWPATH)*

[ -f ./nohup.out ] && rm -rf ./nohup.out
